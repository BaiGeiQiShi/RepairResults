1 Replace /arja/105_bugs_with_src/Lang50b2/src/java/org/apache/commons/lang/time/FastDateFormat.java 291
Faulty:
if (format == null) {
  if (locale == null) {
    locale=Locale.getDefault();
  }
  try {
    SimpleDateFormat formatter=(SimpleDateFormat)DateFormat.getDateInstance(style,locale);
    String pattern=formatter.toPattern();
    format=getInstance(pattern,timeZone,locale);
    cDateInstanceCache.put(key,format);
  }
 catch (  ClassCastException ex) {
    throw new IllegalArgumentException("No date pattern for locale: " + locale);
  }
}
Seed:
if (format == null || timeZone == null) {
  if (locale == null) {
    locale=Locale.getDefault();
  }
  try {
    SimpleDateFormat formatter=(SimpleDateFormat)DateFormat.getDateInstance(style,locale);
    String pattern=formatter.toPattern();
    format=getInstance(pattern,timeZone,locale);
    cDateInstanceCache.put(key,format);
  }
 catch (  ClassCastException ex) {
    throw new IllegalArgumentException("No date pattern for locale: " + locale);
  }
}
**************************************************
2 Replace /arja/105_bugs_with_src/Lang50b2/src/java/org/apache/commons/lang/time/FastDateFormat.java 290
Faulty:
FastDateFormat format=(FastDateFormat)cDateInstanceCache.get(key);
Seed:
FastDateFormat format=(FastDateFormat)cTimeInstanceCache.get(key);
**************************************************
3 InsertBefore /arja/105_bugs_with_src/Lang50b2/src/java/org/apache/commons/lang/time/FastDateFormat.java 1717
Faulty:
if (this == obj) {
  return true;
}
Seed:
if (!(obj instanceof Pair)) {
  return false;
}
**************************************************
4 Replace /arja/105_bugs_with_src/Lang50b2/src/java/org/apache/commons/lang/time/FastDateFormat.java 1721
Faulty:
if (!(obj instanceof Pair)) {
  return false;
}
Seed:
if (!(obj instanceof Pair) || obj instanceof FastDateFormat == false) {
  return false;
}
**************************************************
5 Replace /arja/105_bugs_with_src/Lang50b2/src/java/org/apache/commons/lang/time/FastDateFormat.java 1727
Faulty:
return (mObj1 == null ? key.mObj1 == null : mObj1.equals(key.mObj1)) && (mObj2 == null ? key.mObj2 == null : mObj2.equals(key.mObj2));
Seed:
return (DateFormatUtils.ISO_TIME_NO_T_TIME_ZONE_FORMAT == null ? key.mObj1 == null : mObj1.equals(key.mObj1)) && (mObj2 == null ? key.mObj2 == null : mObj2.equals(key.mObj2));
**************************************************
Evaluations: 5287
EstimatedTime: 605437
