1 Replace /arja/105_bugs_with_src/Chart25b4/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java 298
Faulty:
double rectX=Math.min(transY2,transY1);
Seed:
double rectX=Math.min(row,transY1);
**************************************************
2 InsertBefore /arja/105_bugs_with_src/Chart25b4/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java 262
Faulty:
double lclip=getLowerClip();
Seed:
base=getLowerClip();
**************************************************
3 InsertBefore /arja/105_bugs_with_src/Chart25b4/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java 175
Faulty:
return result;
Seed:
result=masd.getMean();
**************************************************
4 InsertBefore /arja/105_bugs_with_src/Chart25b4/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java 248
Faulty:
if (seriesCount > 1) {
  double seriesGap=dataArea.getHeight() * getItemMargin() / (categoryCount * (seriesCount - 1));
  rectY=rectY + row * (state.getBarWidth() + seriesGap);
}
 else {
  rectY=rectY + row * state.getBarWidth();
}
Seed:
if (dataset != null) {
  int columns=dataset.getColumnCount();
  int rows=dataset.getRowCount();
  double space=0.0;
  PlotOrientation orientation=plot.getOrientation();
  if (orientation == PlotOrientation.HORIZONTAL) {
    space=dataArea.getHeight();
  }
 else   if (orientation == PlotOrientation.VERTICAL) {
    space=dataArea.getWidth();
  }
  double maxWidth=space * getMaximumBarWidth();
  double categoryMargin=0.0;
  if (columns > 1) {
    categoryMargin=domainAxis.getCategoryMargin();
  }
  double used=space * (1 - domainAxis.getLowerMargin() - domainAxis.getUpperMargin()- categoryMargin);
  if ((rows * columns) > 0) {
    state.setBarWidth(Math.min(used / (dataset.getColumnCount()),maxWidth));
  }
 else {
    state.setBarWidth(Math.min(used,maxWidth));
  }
}
**************************************************
Evaluations: 2027
EstimatedTime: 410706
