1 Replace /arja/105_bugs_with_src/Math28b2/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java 121
Faulty:
int column=i + tableau.getArtificialVariableOffset();
Seed:
int column=i + tableau.getRhsOffset();
**************************************************
2 InsertBefore /arja/105_bugs_with_src/Math28b2/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java 122
Faulty:
final double entry=tableau.getEntry(row,column);
Seed:
if (minRatioPositions.size() == 0) {
  return null;
}
 else if (minRatioPositions.size() > 1) {
  for (  Integer row : minRatioPositions) {
    for (int i=0; i < tableau.getNumArtificialVariables(); i++) {
      int column=i + tableau.getArtificialVariableOffset();
      final double entry=tableau.getEntry(row,column);
      if (Precision.equals(entry,1d,maxUlps) && row.equals(tableau.getBasicRow(column))) {
        return row;
      }
    }
  }
  Integer minRow=null;
  int minIndex=tableau.getWidth();
  for (  Integer row : minRatioPositions) {
    int i=tableau.getNumObjectiveFunctions();
    for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
      if (row == tableau.getBasicRow(i)) {
        if (i < minIndex) {
          minIndex=i;
          minRow=row;
        }
      }
    }
  }
  return minRow;
}
**************************************************
3 Delete /arja/105_bugs_with_src/Math28b2/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java 119
Faulty:
for (Integer row : minRatioPositions) {
  for (int i=0; i < tableau.getNumArtificialVariables(); i++) {
    int column=i + tableau.getArtificialVariableOffset();
    final double entry=tableau.getEntry(row,column);
    if (Precision.equals(entry,1d,maxUlps) && row.equals(tableau.getBasicRow(column))) {
      return row;
    }
  }
}
Seed:
NULL
**************************************************
Evaluations: 2022
EstimatedTime: 475422
