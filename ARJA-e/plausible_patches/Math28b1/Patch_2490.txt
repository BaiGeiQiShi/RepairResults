1 Replace /arja/105_bugs_with_src/Math28b1/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java 151
Faulty:
return minRow;
Seed:
return getIterations();
**************************************************
2 Replace /arja/105_bugs_with_src/Math28b1/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java 104
Faulty:
minRatioPositions.add(i);
Seed:
if (cmp < 0) {
  minRatio=ratio;
  minRatioPositions=new ArrayList<Integer>();
  minRatioPositions.add(i);
}
**************************************************
3 Replace /arja/105_bugs_with_src/Math28b1/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java 144
Faulty:
if (i < minIndex) {
  minIndex=i;
  minRow=row;
}
Seed:
if (i < minIndex || !(Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0d,epsilon))) {
  minIndex=i;
  minRow=row;
}
**************************************************
4 InsertBefore /arja/105_bugs_with_src/Math28b1/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java 140
Faulty:
for (Integer row : minRatioPositions) {
  int i=tableau.getNumObjectiveFunctions();
  for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
    if (row == tableau.getBasicRow(i)) {
      if (i < minIndex) {
        minIndex=i;
        minRow=row;
      }
    }
  }
}
Seed:
for (int i=tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
  final double rhs=tableau.getEntry(i,tableau.getWidth() - 1);
  final double entry=tableau.getEntry(i,col);
  if (Precision.compareTo(entry,0d,maxUlps) > 0) {
    final double ratio=rhs / entry;
    final int cmp=Double.compare(ratio,minRatio);
    if (cmp == 0) {
      minRatioPositions.add(i);
    }
 else     if (cmp < 0) {
      minRatio=ratio;
      minRatioPositions=new ArrayList<Integer>();
      minRatioPositions.add(i);
    }
  }
}
**************************************************
Evaluations: 2815
EstimatedTime: 594254
