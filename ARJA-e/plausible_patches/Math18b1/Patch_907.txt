1 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java 87
Faulty:
return optimize(maxEval,f,goalType,startPoint,null,null);
Seed:
evaluations.setMaximalCount(maxEval);
**************************************************
2 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 934
Faulty:
return res;
Seed:
boundaries=null;
**************************************************
3 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java 112
Faulty:
for (int i=0; i < dim; i++) {
  final double v=startPoint[i];
  final double hi=upper[i];
  if (v > hi) {
    throw new NumberIsTooLargeException(v,hi,true);
  }
}
Seed:
if (lower == null) {
  lowerBound=new double[dim];
  for (int i=0; i < dim; i++) {
    lowerBound[i]=Double.NEGATIVE_INFINITY;
  }
}
 else {
  lowerBound=lower.clone();
}
**************************************************
4 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 960
Faulty:
return res;
Seed:
for (int i=0; i < x.length; i++) {
  double diff=boundaries[1][i] - boundaries[0][i];
  res[i]=(x[i] - boundaries[0][i]) / diff;
}
**************************************************
Evaluations: 1011
EstimatedTime: 8209166
