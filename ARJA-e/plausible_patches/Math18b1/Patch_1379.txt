1 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 934
Faulty:
return res;
Seed:
boundaries=null;
**************************************************
2 Replace /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 482
Faulty:
sigma=sigma * Math.exp(0.2 + cs / damps);
Seed:
if (bestValue == fitness[arindex[(int)(0.1 + lambda / 4.)]]) {
  sigma=sigma * Math.exp(0.2 + cs / damps);
}
**************************************************
3 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 536
Faulty:
boundaries[0]=lB;
Seed:
if (hasFiniteBounds) {
  for (int i=0; i < lB.length; i++) {
    if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) {
      hasInfiniteBounds=true;
      break;
    }
  }
  if (hasInfiniteBounds) {
    throw new MathUnsupportedOperationException();
  }
 else {
    boundaries=new double[2][];
    boundaries[0]=lB;
    boundaries[1]=uB;
    for (int i=0; i < lB.length; i++) {
      if (Double.isInfinite(boundaries[1][i] - boundaries[0][i])) {
        final double max=Double.MAX_VALUE + boundaries[0][i];
        final NumberIsTooLargeException e=new NumberIsTooLargeException(boundaries[1][i],max,true);
        e.getContext().addMessage(LocalizedFormats.OVERFLOW);
        e.getContext().addMessage(LocalizedFormats.INDEX,i);
        throw e;
      }
    }
  }
}
 else {
  boundaries=null;
}
**************************************************
4 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 971
Faulty:
value=CMAESOptimizer.this.computeObjectiveValue(decode(repaired)) + penalty(point,repaired);
Seed:
valueRange=1.0;
**************************************************
Evaluations: 1414
EstimatedTime: 11627751
