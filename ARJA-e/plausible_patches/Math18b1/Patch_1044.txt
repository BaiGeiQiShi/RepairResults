1 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java 109
Faulty:
if (upper.length != dim) {
  throw new DimensionMismatchException(upper.length,dim);
}
Seed:
if (lower != null) {
  if (lower.length != dim) {
    throw new DimensionMismatchException(lower.length,dim);
  }
  for (int i=0; i < dim; i++) {
    final double v=startPoint[i];
    final double lo=lower[i];
    if (v < lo) {
      throw new NumberIsTooSmallException(v,lo,true);
    }
  }
}
**************************************************
2 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 934
Faulty:
return res;
Seed:
boundaries=null;
**************************************************
3 Replace /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 956
Faulty:
for (int i=0; i < x.length; i++) {
  double diff=boundaries[1][i] - boundaries[0][i];
  res[i]=diff * x[i] + boundaries[0][i];
}
Seed:
for (int i=0; i < repairAndDecode(x).length; i++) {
  double diff=boundaries[1][i] - boundaries[0][i];
  res[i]=diff * x[i] + boundaries[0][i];
}
**************************************************
4 Replace /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 958
Faulty:
res[i]=diff * x[i] + boundaries[0][i];
Seed:
res[i]=diff * x[checkFeasableCount] + boundaries[0][i];
**************************************************
Evaluations: 1135
EstimatedTime: 9230180
