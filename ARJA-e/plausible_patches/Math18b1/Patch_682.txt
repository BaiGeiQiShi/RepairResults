1 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 1033
Faulty:
double penalty=0;
Seed:
for (int i=0; i < x.length; i++) {
  if (x[i] < 0) {
    repaired[i]=0;
  }
 else   if (x[i] > 1.0) {
    repaired[i]=1.0;
  }
 else {
    repaired[i]=x[i];
  }
}
**************************************************
2 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 934
Faulty:
return res;
Seed:
boundaries=null;
**************************************************
3 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 583
Faulty:
lambda=4 + (int)(3. * Math.log(dimension));
Seed:
D=ones(dimension,1);
**************************************************
4 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 960
Faulty:
return res;
Seed:
for (int i=0; i < x.length; i++) {
  double diff=boundaries[1][i] - boundaries[0][i];
  res[i]=(x[i] - boundaries[0][i]) / diff;
}
**************************************************
Evaluations: 815
EstimatedTime: 6509026
