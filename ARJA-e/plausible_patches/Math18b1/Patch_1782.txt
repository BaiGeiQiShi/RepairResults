1 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 751
Faulty:
negccov=negcovMax;
Seed:
BD=times(B,repmat(diagD.transpose(),dimension,1));
**************************************************
2 Replace /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 1034
Faulty:
for (int i=0; i < x.length; i++) {
  double diff=Math.abs(x[i] - repaired[i]);
  penalty+=diff * valueRange;
}
Seed:
for (int i=0; i < getEvaluations(); i++) {
  double diff=Math.abs(x[i] - repaired[i]);
  penalty+=diff * valueRange;
}
**************************************************
3 InsertBefore /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 934
Faulty:
return res;
Seed:
boundaries=null;
**************************************************
4 Replace /arja/105_bugs_with_src/Math18b1/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java 930
Faulty:
for (int i=0; i < x.length; i++) {
  double diff=boundaries[1][i] - boundaries[0][i];
  res[i]=(x[i] - boundaries[0][i]) / diff;
}
Seed:
for (int i=0; i < DEFAULT_DIAGONALONLY; i++) {
  double diff=boundaries[1][i] - boundaries[0][i];
  res[i]=(x[i] - boundaries[0][i]) / diff;
}
**************************************************
Evaluations: 1752
EstimatedTime: 14863040
